#!/usr/bin/env bash
#
# 🐝 bee - plugin-based bash automation
#
# Shell Style Guide
# https://google.github.io/styleguide/shell.xml
#
# "bash strict mode"
# http://redsymbol.net/articles/unofficial-bash-strict-mode/

set -euo pipefail
IFS=$'\n\t'

################################################################################
# log
################################################################################

BEE_SILENT=false

log() {
  if [[ "${BEE_SILENT}" == false ]]; then
    echo "🐝 $*"
  fi
}

log_info() {
  if [[ "${BEE_SILENT}" == false ]]; then
    echo ""
    echo "################################################################################"
    echo "🐝 $*"
    echo "################################################################################"
  fi
}

log_warn() {
  echo "🟠 WARNING: $*" >&2
}

log_error() {
  echo "🔴 ERROR: $*" >&2
}

log_func() {
  log_info "${FUNCNAME[1]} $*"
}

log_var() {
  echo "${!1}"
}

################################################################################
# init
################################################################################

resolve_file() {
  local current_dir="${PWD}"
  local path="$1"
  local link
  while [[ -L "${path}" ]]; do
    link="$(readlink "${path}")"
    cd "$(dirname "${path}")"
    cd "$(dirname "${link}")"
    path="${link}"
  done
  cd "${current_dir}"
  echo "${path}"
}

BEE_SYSTEM_HOME="$(dirname "$(dirname "$(resolve_file "${BASH_SOURCE[0]}")")")"
BEE_RESOURCES=.bee

# TODO: remove when expired (Dec 2020)
bee_migration_0390_sub() {
  if [[ -f .beerc ]]; then
    source .beerc
    if [[ -v BEE_VERSION ]]; then
      local version=${BEE_VERSION//./}
      version="${version#0}"
      if (( version <= 380 )); then
        echo "${version}"
        return
      fi
    fi
  fi
}

bee_migration_0390() {
  if [[ -f bee.sh ]]; then
    BEE_VERSION="0.36.0"
  else
    local version="$(bee_migration_0390_sub)"
    if [[ -n "${version}" ]]; then
      BEE_VERSION="${version}"
    fi
  fi

  if [[ -v BEE_VERSION ]]; then
    IFS=$' \n\t'
    BEE_HOME="${HOME}/.bee/caches/bee/${BEE_VERSION}"
  else
    BEE_HOME="${BEE_SYSTEM_HOME}"
  fi
}
bee_migration_0390

if [[ ! -f "${HOME}/.beerc" ]]; then
  echo '#!/usr/bin/env bash
BEE_PLUGIN_REGISTRIES=(
  git@github.com:sschmid/bee-hub.git
)' > "${HOME}/.beerc"
fi
source "${HOME}/.beerc"

# TODO: remove when expired (Dec 2020)
bee_migration_0370() {
  if [[ -f bee.sh ]]; then
    source bee.sh
    BEE_PROJECT="${PROJECT}"
    BEE_RESOURCES="${RESOURCES:-${BEE_RESOURCES}}"
  fi
}
bee_migration_0370

# TODO: remove when expired (Dec 2020)
bee_migration_0380() {
  command -v builtin_commands &> /dev/null || {
    builtin_commands() {
      internal_commands
    }
  }
}
bee_migration_0380

if [[ -v BEE_RC ]]; then
  source "${BEE_RC}"
else
  if [[ -f .beerc ]]; then
    BEE_RC=.beerc
    source "${BEE_RC}"
  fi
fi

assert_min_bee_version() {
  local system_version_str
  system_version_str="$(cat "${BEE_SYSTEM_HOME}/version.txt")"
  local system_version=${system_version_str//./}
  system_version="${system_version#0}"

  local version=${BEE_VERSION//./}
  version="${version#0}"
  if (( version > system_version )); then
    log_error "The specified bee version (${BEE_VERSION}) is higher than the installed version (${system_version_str})!" \
    "Please run 'bee update' to update bee to the latest version and try again."
    exit 1
  fi
}

if [[ -v BEE_VERSION ]]; then
  assert_min_bee_version
  BEE_HOME="${HOME}/.bee/caches/bee/${BEE_VERSION}"
  if [[ ! -d "${BEE_HOME}" ]]; then
    git -c advice.detachedHead=false clone -q --depth 1 --branch "${BEE_VERSION}" git@github.com:sschmid/bee.git "${BEE_HOME}"
  fi
else
  BEE_HOME="${BEE_SYSTEM_HOME}"
fi

source "${BEE_HOME}/src/bee.sh"
